local AimbotModule = {}

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local RunService = game:GetService("RunService")

-- NPCs to ignore for aimbot
local IgnoreNames = {
    "Horse",
    "Unicorn",
}

-- Check if the model is a player
local function isPlayerModel(model)
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character == model then
            return true
        end
    end
    return false
end

-- Should this NPC be ignored for aimbot?
local function shouldIgnore(model)
    return isPlayerModel(model) or table.find(IgnoreNames, model.Name)
end

-- Get closest valid aimbot target
function AimbotModule.getClosestEnemy()
    local char = LocalPlayer.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return nil end
    local myPos = char.HumanoidRootPart.Position

    local closest, shortestDist = nil, math.huge
    for _, npc in pairs(Workspace:GetDescendants()) do
        if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc:FindFirstChild("HumanoidRootPart") and not shouldIgnore(npc) then
            local hrp = npc.HumanoidRootPart
            local dist = (hrp.Position - myPos).Magnitude
            if dist < shortestDist then
                closest = npc
                shortestDist = dist
            end
        end
    end
    return closest
end

-- Aim at closest enemy
function AimbotModule.aimAtEnemy()
    local target = AimbotModule.getClosestEnemy()
    if target and target:FindFirstChild("HumanoidRootPart") then
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.HumanoidRootPart.Position)
    end
end

return AimbotModule
